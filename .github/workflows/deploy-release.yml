name: Deploy Release

on:
  release:
    branches: [main]
    types: [published]
  workflow_dispatch:
env:
  tag: ${{ github.event.release.tag_name || github.event.inputs.tag || github.event.inputs.tag_name|| github.event.ref }}
jobs:
  download-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: download
        run: gh release download $tag --dir ./release --repo="$GITHUB_REPOSITORY"
      - name: cache release
        uses: actions/cache@v4.0.2
        with:
          path: release
          key: $tag
          
  deployment-dev:
    if: ${{ github.event_name != 'workflow_dispatch' }}
    needs: [download-release]
    runs-on: ubuntu-latest
    environment: dev
    concurrency: dev-group
    steps:
      - name: get cache release
        uses: actions/cache@v4.0.2
        with:
          path: release
          key: $tag
      - name: list release content
        run: |
          cd release
          ls
      - name: deploy
        run: echo Hello, World! Deploying to Dev
        
  deployment-test:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [download-release]
    runs-on: ubuntu-latest
    environment: test
    concurrency: test-group
    steps:
      - name: get cache release
        uses: actions/cache@v4.0.2
        with:
          path: release
          key: $tag
      - name: list release content
        run: |
          cd release
          ls
      - name: deploy
        run: echo Hello, World! Deploying to Test
        
  deployment-prod:
    needs: [deployment-test, download-release]
    runs-on: ubuntu-latest
    environment: prod
    concurrency: prod-group
    steps:
      - name: get cache release
        uses: actions/cache@v4.0.2
        with:
          path: release
          key: $tag
      - name: list release content
        run: |
          cd release
          ls
      - name: deploy
        run: echo Hello, World! Deploying to Prod

